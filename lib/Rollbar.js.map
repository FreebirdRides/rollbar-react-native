{"version":3,"sources":["../src/Rollbar.js"],"names":[],"mappings":"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","file":"Rollbar.js","sourcesContent":["import { NativeModules } from 'react-native';\n\nimport Rollbar from 'rollbar/src/react-native/rollbar';\n\nconst NativeClient = NativeModules.RollbarReactNative;\n\nexport class Client {\n  constructor(config) {\n    if (config instanceof Configuration) {\n      this.config = config;\n    } else {\n      this.config = new Configuration(config);\n    }\n\n    console.log('before break: ', this.config.toJSON());\n    this.rollbar = new Rollbar(this.config.toJSON());\n\n    if (NativeClient) {\n      NativeClient.start(this.config.toJSON());\n      this.captureUncaughtExceptions();\n      if (this.config.captureUnhandledRejections) {\n        this.captureUnhandledRejections();\n      }\n    } else {\n      throw new Error('Rollbar: Native client not found. Did you run react-native link?');\n    }\n  }\n\n  captureUncaughtExceptions = () => {\n\t\tif (ErrorUtils) {\n      const previousHandler = ErrorUtils.getGlobalHandler();\n\n      ErrorUtils.setGlobalHandler((error, isFatal) => {\n        if (this.config.captureUncaught && this.config.shouldSend()) {\n          this.error(error, undefined, (queued) => {\n            if (previousHandler) {\n              previousHandler(error, isFatal);\n            }\n          });\n        } else if (previousHandler) {\n          previousHandler(error, isFatal);\n        }\n      });\n    }\n  }\n\n  captureUnhandledRejections = () => {\n\t\tconst tracking = require('promise/setimmediate/rejection-tracking');\n    const client = this;\n    tracking.enable({\n      allRejections: true,\n      onUnhandled: function(id, error) { client.error(error); },\n      onHandled: function() {}\n    });\n  }\n\n  log = (obj, extra, callback) => {\n\t\tif (!this.config.shouldSend()) {\n      if (callback) {\n        callback(false);\n      }\n      return;\n    }\n\n    this.rollbar.log(obj, extra, callback);\n  }\n\n  debug = (obj, extra, callback) => {\n    return this.rollbar.debug(obj, extra, callback);\n  }\n\n  info = (obj, extra, callback) => {\n    return this.rollbar.info(obj, extra, callback);\n  }\n\n  warning = (obj, extra, callback) => {\n    return this.rollbar.warning(obj, extra, callback);\n  }\n\n  error = (obj, extra, callback) => {\n    return this.rollbar.error(obj, extra, callback);\n  }\n\n  critical = (obj, extra, callback) => {\n    return this.rollbar.critical(obj, extra, callback);\n  }\n\n  setUser = (id, name, email) => {\n    NativeClient.setUser({id, name, email});\n  }\n\n  clearUser = () => {\n    NativeClient.clearUser();\n  }\n}\n\nexport class Configuration {\n  constructor(accessToken, options) {\n    options = options || {};\n    const pkgData = require('../package.json');\n    this.version = pkgData['version'];\n    this.accessToken = accessToken;\n    this.logLevel = options.logLevel || 'debug';\n    this.endpoint = options.endpoint || 'https://api.rollbar.com/api/1/';\n    this.appVersion = options.appVersion || undefined;\n    this.codeBundleId = options.codeBundleId || undefined;\n    this.releaseStage = options.releaseStage || undefined;\n    this.enabledReleaseStages = options.enabledReleaseStages || undefined;\n    this.captureUncaught = options.captureUncaught !== undefined ? options.captureUncaught : true;\n    this.captureUnhandledRejections = options.captureUnhandledRejections !== undefined ? options.captureUnhandledRejections : !__DEV__;\n  }\n\n  shouldSend = () => {\n    return !this.releaseStage ||\n      !this.enabledReleaseStages ||\n      this.enabledReleaseStages.includes(this.releaseStage);\n  }\n\n  toJSON = () => {\n    return {\n      accessToken: this.accessToken,\n      payload: {\n        codeBundleId: this.codeBundleId,\n        releaseStage: this.releaseStage,\n        enabledReleaseStages: this.enabledReleaseStages,\n        appVersion: this.appVersion\n      },\n      notifier: {\n        name: 'rollbar-react-native',\n        version: this.version\n      }\n    };\n  }\n}\n\nexport class Item {\n  constructor(accessToken, obj, level, extra) {\n    this.accessToken = accessToken;\n    if (obj instanceof Error) {\n      this.errorClass = obj.constructor.name;\n      this.errorMessage = obj.message;\n      this.stack = obj.stack;\n    } else {\n      this.message = obj;\n    }\n    this.level = level;\n    this.metadata = extra || {};\n    this.user = {};\n  }\n\n  addMetadata = (section, key, value) => {\n    if (!this.metadata[section]) {\n      this.metadata[section] = {};\n    }\n    this.metadata[section][key] = value;\n  }\n\n  toJSON = () => {\n    return {\n      accessToken: this.accessToken,\n      errorClass: this.errorClass,\n      errorMessage: this.errorMessage,\n      stack: this.stack,\n      message: this.message,\n      level: this.level,\n      metadata: typedMap(this.metadata),\n      user: this.user\n    }\n  }\n}\n\nconst allowedMapObjectTypes = ['string', 'number', 'boolean'];\n\nconst typedMap = function(map) {\n  const output = {};\n  for (const key in map) {\n    if (!{}.hasOwnProperty.call(map, key)) {\n      continue;\n    }\n\n    const value = map[key];\n\n    if (value == undefined || (typeof value === 'number' && isNaN(value))) {\n      output[key] = {type: 'string', value: String(value)}\n    } else if (typeof value === 'object') {\n      output[key] = {type: 'map', value: typedMap(value)};\n    } else {\n      const type = typeof value;\n      if (allowedMapObjectTypes.includes(type)) {\n        output[key] = {type: type, value: value};\n      } else {\n        console.warn(`Could not serialize metadata for '${key}': Invalid type '${type}'`);\n      }\n    }\n  }\n  return output;\n}\n"]}